// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  price       Float
  description String?
  category_id Int
  count       Int
  url_image   String?
  category    Category   @relation(fields: [category_id], references: [id], onUpdate: Cascade)
  cart        Cart[]
  wishList    WishList[]
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  password   String
  role       Role?      @default(customer)
  firstname  String
  lastname   String
  middlename String
  cart       Cart[]
  wishList   WishList[]
}

model Cart {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  count      Int
  price      Float?
  product    Product? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model WishList {
  user_id    Int
  product_id Int
  comment    String?
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([user_id, product_id])
}

enum Role {
  administrator
  customer
  seller
}